/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package lane;

import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author user
 */
public class sales extends javax.swing.JFrame {
    ImageIcon icon=new ImageIcon("lan.jpg");
    String a = null;
    String d = null;
    String numberofitems = null;
    String buyingprice = null;
    String itemid = null;
    int fin = 0;
    String spec = null;
    String noitems=null;
    String sellingprice = null;
    String s4 = Integer.toString(fin);
    /**
     * Creates new form sales
     */
    public sales() {
        
        initComponents();
        this.setLocationRelativeTo(null);
        this.setIconImage(icon.getImage());
        popitems();
        //this.setExtendedState(getExtendedState()|JFrame.MAXIMIZED_BOTH);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        home = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        stoin = new javax.swing.JTable();
        search1 = new javax.swing.JTextField();
        noi = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        next = new javax.swing.JButton();
        conf = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        subtotals = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        moneyfc = new javax.swing.JTextField();
        change = new javax.swing.JTextField();
        custno = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        cancel = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        pop = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        f1 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        f2 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        mode = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        gtotal = new javax.swing.JTextField();
        complete = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("lanego sales sotware");

        home.setBackground(new java.awt.Color(255, 255, 255));
        home.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        home.setForeground(new java.awt.Color(0, 0, 0));
        home.setText("HOME");
        home.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeActionPerformed(evt);
            }
        });

        stoin.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "item", "quantity", "specifics", "@ price", "sub total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(stoin);

        search1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search1ActionPerformed(evt);
            }
        });
        search1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                search1KeyReleased(evt);
            }
        });

        noi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noiActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(255, 255, 255));
        jButton5.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jButton5.setForeground(new java.awt.Color(0, 0, 0));
        jButton5.setText("clear all");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        next.setBackground(new java.awt.Color(255, 255, 255));
        next.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        next.setForeground(new java.awt.Color(0, 0, 0));
        next.setText("next");
        next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextActionPerformed(evt);
            }
        });

        conf.setBackground(new java.awt.Color(255, 255, 255));
        conf.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        conf.setForeground(new java.awt.Color(0, 0, 0));
        conf.setText("confirm");
        conf.setEnabled(false);
        conf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confActionPerformed(evt);
            }
        });

        jLabel1.setText("sub totals");

        subtotals.setEditable(false);
        subtotals.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subtotalsActionPerformed(evt);
            }
        });

        jLabel2.setText("*money given by customer. ");

        jLabel3.setText("change");

        moneyfc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                moneyfcKeyReleased(evt);
            }
        });

        change.setEditable(false);
        change.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeActionPerformed(evt);
            }
        });

        custno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                custnouActionPerformed(evt);
            }
        });

        jLabel5.setText("customer phone number");

        cancel.setText("cancel operation");
        cancel.setEnabled(false);
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        pop.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "item", "specifics", "buying price", "selling price", "quant. available", "id"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        pop.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                popMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(pop);
        if (pop.getColumnModel().getColumnCount() > 0) {
            pop.getColumnModel().getColumn(5).setPreferredWidth(0);
        }

        jLabel7.setText("search box.");

        jLabel8.setText("selected item");

        f1.setEditable(false);
        f1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                f1ActionPerformed(evt);
            }
        });

        jLabel9.setText("price");

        f2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                f2ActionPerformed(evt);
            }
        });

        jLabel10.setText("number of items.");

        jButton2.setText("cash");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("mpesa");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("debt");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("select mode of payment.");

        jLabel11.setText("grand total");

        gtotal.setEditable(false);
        gtotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gtotalActionPerformed(evt);
            }
        });

        complete.setBackground(new java.awt.Color(255, 255, 255));
        complete.setForeground(new java.awt.Color(0, 0, 0));
        complete.setText("complete the sale");
        complete.setEnabled(false);
        complete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                completeActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setForeground(new java.awt.Color(0, 0, 0));
        jButton1.setText("next");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton6.setBackground(new java.awt.Color(0, 0, 0));
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("verify details");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton3)
                                        .addGap(29, 29, 29)
                                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(mode, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(21, 21, 21)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(subtotals)
                                            .addComponent(next, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE))
                                        .addGap(15, 15, 15)
                                        .addComponent(conf, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(f1, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(f2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(noi, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(search1, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(home, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jButton6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(complete, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE))
                                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(custno, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE)
                                                .addComponent(change, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE)
                                                .addComponent(gtotal))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(moneyfc, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))))))))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 763, Short.MAX_VALUE))
                .addGap(10, 10, 10))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(home, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(search1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                            .addComponent(f1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(noi, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(f2, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mode, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButton2)
                                .addComponent(jButton3)
                                .addComponent(jButton4)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(next, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(subtotals, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(conf, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(gtotal, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                            .addComponent(moneyfc, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(change, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(custno, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(complete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(15, 15, 15))
                    .addComponent(jScrollPane1)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void homeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeActionPerformed
        try {
            this.dispose();
            new mainwin_1().setVisible(true);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(sales.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(sales.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_homeActionPerformed

    private void noiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_noiActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        clear();
    }//GEN-LAST:event_jButton5ActionPerformed

    public void clear() {
        f1.setText("");
        f2.setText("");
        noi.setText("");
        subtotals.setText("");
        moneyfc.setText("");
        custno.setText("");
        mode.setText(" ");
    }

    private void nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextActionPerformed
        
        try {
            complete.setEnabled(false);
            confnext();
        } catch (HeadlessException | ClassNotFoundException ex) {
            Logger.getLogger(sales.class.getName()).log(Level.SEVERE, null, ex);
        }
     
    }//GEN-LAST:event_nextActionPerformed

    private void confActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confActionPerformed
        try {
            
            Object[] obj3 = { a, noitems, sellingprice, d, s4};
                                DefaultTableModel model3 = (DefaultTableModel) stoin.getModel();
                                model3.addRow(obj3);
            
            complete.setEnabled(false);
            state.execute("commit; end transaction");
            subtotals.setText("");
            state.close();
            con.close();
            f1.setText("");
            f2.setText("");
            noi.setText("");
            popitems();
        } catch (SQLException ex) {
            Logger.getLogger(sales.class.getName()).log(Level.SEVERE, null, ex);
        }
        next.setEnabled(true);
        conf.setEnabled(false);
        cancel.setEnabled(false);
        
        int rowc1 =  stoin.getRowCount();
        int sum1 = 0;
        for(int i = 0; i<rowc1 ; i++ ){
            sum1 = sum1 + Integer.parseInt(stoin.getValueAt(i,4).toString());
        }
        gtotal.setText(Integer.toString(sum1));
    }//GEN-LAST:event_confActionPerformed

    private void changeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_changeActionPerformed

    private void custnouActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_custnouActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_custnouActionPerformed

    private void subtotalsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subtotalsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_subtotalsActionPerformed

    private void search1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_search1ActionPerformed

    private void f2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_f2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_f2ActionPerformed

    private void search1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_search1KeyReleased
        DefaultTableModel m = (DefaultTableModel) pop.getModel();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(m);
        pop.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(search1.getText().trim()));
    }//GEN-LAST:event_search1KeyReleased

    private void popMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_popMouseClicked
    if(search1.getText().length()<1){  
        DefaultTableModel model = (DefaultTableModel) pop.getModel();
       
        a = model.getValueAt(pop.getSelectedRow(), 0).toString();
        d = model.getValueAt(pop.getSelectedRow(), 3).toString();
        numberofitems = model.getValueAt(pop.getSelectedRow(), 4).toString();
        buyingprice = model.getValueAt(pop.getSelectedRow(), 2).toString();
        itemid = model.getValueAt(pop.getSelectedRow(), 5).toString();
        spec = model.getValueAt(pop.getSelectedRow(), 1).toString();
        
        f1.setText(a);
        f2.setText(d);
    }else{
        JOptionPane.showMessageDialog(this, "cannot select items while searching");
    }
    }//GEN-LAST:event_popMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        mode.setText("cash");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        mode.setText("debt");
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        mode.setText("mpesa");
    }//GEN-LAST:event_jButton3ActionPerformed

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        if(gtotal.getText().length()>0){
            JOptionPane.showMessageDialog(this, "cannot cancel in the midst of a started sale.");
        }else{
        home.setEnabled(true);
        try {
            state.execute("rollback; end transaction");
            state.close();
            con.close();
            popitems();
            clear();
            subtotals.setText("");
        } catch (SQLException ex) {
            Logger.getLogger(sales.class.getName()).log(Level.SEVERE, null, ex);
        }
        next.setEnabled(true);
        conf.setEnabled(false);
        cancel.setEnabled(false);
        complete.setEnabled(false);
        }
    }//GEN-LAST:event_cancelActionPerformed

    private void gtotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gtotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gtotalActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    try{   
        int moneyfromcust = Integer.parseInt(moneyfc.getText());
        int costofgoods = Integer.parseInt(gtotal.getText());
        int changetaken = moneyfromcust - costofgoods;
        
        if(changetaken<0){
            JOptionPane.showMessageDialog(this, "the money from customer is insufficient!!");
        }else{
            complete.setEnabled(false);
            change.setText(Integer.toString(changetaken));
        }
    }catch(NumberFormatException ex){
        JOptionPane.showMessageDialog(this, "no goods have being seleted for sale!!");
    }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void moneyfcKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_moneyfcKeyReleased
        complete.setEnabled(false);
        String a = moneyfc.getText();
        change.setText("");
        try{
        int b = Integer.parseInt(a);
        }catch(NumberFormatException ex){
            JOptionPane.showMessageDialog(this, "invalid input!!");
            moneyfc.setText("");
        }
    }//GEN-LAST:event_moneyfcKeyReleased

    private void f1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_f1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_f1ActionPerformed

    private void completeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_completeActionPerformed
        
        try {
            //sting a is autoincrement.
            String b = mode.getText();
            java.util.Date now= new java.util.Date();
            SimpleDateFormat form = new SimpleDateFormat(" dd / MMMM / Y ");
            String c = form.format(now);
            java.util.Date now2= new java.util.Date();
            SimpleDateFormat form1 = new SimpleDateFormat(" h:mm  a ");
            String d = form1.format(now2);
            java.util.Date now3= new java.util.Date();
            SimpleDateFormat form3 = new SimpleDateFormat(" EEEE ");
            String e = form3.format(now3);
            String f = gtotal.getText();
            login.loginpage usr = new login.loginpage();
            String g = usr.user;
            String h = custno.getText();
            
            Class.forName("org.sqlite.JDBC");
            con = DriverManager.getConnection("jdbc:sqlite:lng.db");
            state = con.createStatement();
            state.execute("insert into saleshist (pm ,dt ,tm ,day ,wog ,sb ,cpn ) \n" +
                    "values(\""+b+"\",\""+c+"\",\""+d+"\", \""+e+"\",\n" +
                            "\""+f+"\", \""+g+"\",\""+h+"\");");
            
            String aa = gtotal.getText();
            String bb = "0";
            //-----------------------------time
            java.util.Date now5= new java.util.Date();
            SimpleDateFormat form5 = new SimpleDateFormat(" h:mm  a ");
            String dd = form5.format(now5);
            //-----------------------------month
            java.util.Date now4= new java.util.Date();
            SimpleDateFormat form4 = new SimpleDateFormat(" dd/MMMM ");
            String ee = form4.format(now4);
            //-----------------------------year
            java.util.Date now6= new java.util.Date();
            SimpleDateFormat form6 = new SimpleDateFormat(" Y ");
            String ff = form6.format(now6);
            Statement state5 = con.createStatement();
            state5.execute("insert into transhist (ai ,ao , day, tm, month, year) \n" +
                    "values(\""+aa+"\",\""+bb+"\",\""+e+"\", \""+dd+"\",\n" +
                            "\""+ee+"\", \""+ff+"\");");
            state5.close();
            
            clear();
            gtotal.setText("");
            change.setText("");
            state.close();
            con.close();
            JOptionPane.showMessageDialog(this, "sale done succefully");
            home.setEnabled(true);
            
            this.dispose();
            new lane.sales().setVisible(true);
     
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(sales.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(sales.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_completeActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
       if(change.getText().length()>0){
            try{
            int moneyfromcust = Integer.parseInt(moneyfc.getText());
            int costofgoods = Integer.parseInt(gtotal.getText());
            int changetaken = Integer.parseInt(change.getText());
            String customernumber = custno.getText();
            complete.setEnabled(true);
            }catch(NumberFormatException ex){
                JOptionPane.showMessageDialog(this, "fill all information correctly before entering your name!!");
            }
        }else{
            JOptionPane.showMessageDialog(this, "no sale has being made!!");
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(sales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(sales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(sales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(sales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new sales().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancel;
    private javax.swing.JTextField change;
    private javax.swing.JButton complete;
    private javax.swing.JButton conf;
    private javax.swing.JTextField custno;
    private javax.swing.JTextField f1;
    private javax.swing.JTextField f2;
    private javax.swing.JTextField gtotal;
    private javax.swing.JButton home;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField mode;
    private javax.swing.JTextField moneyfc;
    private javax.swing.JButton next;
    private javax.swing.JTextField noi;
    private javax.swing.JTable pop;
    private javax.swing.JTextField search1;
    private javax.swing.JTable stoin;
    private javax.swing.JTextField subtotals;
    // End of variables declaration//GEN-END:variables

    private void popitems() {
    
        try {
            Class.forName("org.sqlite.JDBC");
            DefaultTableModel model = (DefaultTableModel) pop.getModel();
            model.setRowCount(0);
            
            Connection con1 = DriverManager.getConnection("jdbc:sqlite:lng.db");
            Statement state14 = con1.createStatement();
            ResultSet rs2 = state14.executeQuery("select item3, spec3, atprice3, sellp3, quant3, transid3 from stocksell where transid3 > 0 order by transid3 desc;");
            
            while(rs2.next()){
                
                String s0=rs2.getString(1);
                String s1=rs2.getString(2);
                String s2=rs2.getString(3);
                String s3=rs2.getString(4);
                String s4=rs2.getString(5);
                String s5 = rs2.getString(6);
                
                Object[] obj2 = {s0, s1, s2, s3, s4, s5};
                DefaultTableModel model2 = (DefaultTableModel) pop.getModel();
                model2.addRow(obj2);
                
            }  
            state14.close();
            rs2.close();
            con1.close();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(sales.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(sales.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
  public void confnext() throws HeadlessException, ClassNotFoundException {
        noitems = noi.getText();
        sellingprice = f2.getText();
        if(sellingprice.length()>0&&noitems.length()>0){
            try{
                int ochoice = Integer.parseInt(f2.getText());
                int price = Integer.parseInt(sellingprice);
                int quant = Integer.parseInt(noitems);
                int sum = Integer.parseInt(numberofitems);
                int rchoice = Integer.parseInt(buyingprice);
                fin = quant * price;
                s4 = Integer.toString(fin);
                
                if(quant > sum){
                    JOptionPane.showMessageDialog(this, "insufficient items.");
                }else{
                    if(ochoice < rchoice){
                        JOptionPane.showMessageDialog(this, "!!! cannot sell the item bellow sh."+buyingprice+" \ncoz it wiill result to a loss"
                                + " of sh."+(rchoice - ochoice));
                    }else{
                        if(quant < 1){
                            JOptionPane.showMessageDialog(this, "invalid number of items.\nmust be atleast 1 or above");
                        }else{
                            if (mode.getText().length()<1){
                                JOptionPane.showMessageDialog(this, "mode not selected");
                            }else{
                                subtotals.setText(s4);
                                home.setEnabled(false);
                                complete();
                                popitems();
                                subtotals.setText(s4);
                                next.setEnabled(false);
                            }
                        }
                    }
                }
                
            }catch(NumberFormatException ex){
                JOptionPane.showMessageDialog(this, "invalid details.");
            } catch (SQLException ex) {
                Logger.getLogger(sales.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            JOptionPane.showMessageDialog(this, "no item selected or\n no number of items filled");
        }
    }
  
Connection con = null;
Statement state = null;
  
    private void complete() throws ClassNotFoundException, SQLException {
            Class.forName("org.sqlite.JDBC");
            con = DriverManager.getConnection("jdbc:sqlite:lng.db");
            state = con.createStatement();
            
            state.execute("begin transaction;");
            
        try {
            
            String noitems = noi.getText();
            
            int ochoice = Integer.parseInt(f2.getText());
            int quant = Integer.parseInt(noitems);
            int sum = Integer.parseInt(numberofitems);
            int rchoice = Integer.parseInt(buyingprice);
            int rem = sum - quant;
            String finrem = Integer.toString(rem);
            String pricerem = Integer.toString((rem * rchoice));
            
            
            
            
            if(rem == 0){
            
                state.execute("delete from stockin where transid1 = \""+itemid+"\";");
                state.execute("delete from stocksell where transid3 = \""+itemid+"\";");
                
            }
             
            state.execute("update stockin set quantity1 = \""+finrem+"\", totalprice1 = \""+pricerem+"\" where transid1 = \""+itemid+"\";");
            state.execute("update stocksell set quant3 = \""+finrem+"\" where transid3 = \""+itemid+"\";");
            
            String aa = f1.getText();
            String bb = noi.getText();
            String cc = spec;
            String dd = Integer.toString(ochoice);
            String ee = Integer.toString(fin);
            java.util.Date now= new java.util.Date();
            SimpleDateFormat form = new SimpleDateFormat("EE   dd / MMMM / Y      h:mm  a");
            String ff = form.format(now);
            String hh = mode.getText();
            
            state.execute("insert into stockout (item2 ,quantity2 ,quality2,atprice2 ,totalprice2 ,date2 ,state2 ) \n" +
                    "values(\""+aa+"\",\""+bb+"\",\""+cc+"\", \""+dd+"\",\n" +
                            "\""+ee+"\", \""+ff+"\",\""+hh+"\");");
            state.close();
            
            conf.setEnabled(true);
            cancel.setEnabled(true);
            
            popitems();
            
        } catch (SQLException ex) {
            Logger.getLogger(sales.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    }

}


