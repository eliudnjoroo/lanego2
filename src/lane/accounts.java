/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

package lane;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author eliudnjorooo 
 */
public class accounts extends javax.swing.JFrame implements ActionListener{
    ImageIcon icon=new ImageIcon("lan.jpg");
    public static Connection con;
    public static Statement state;
    /** Creates new form accounts */
    public accounts() throws SQLException, ClassNotFoundException {
        initComponents();
        showdata();
        showdata2();
        this.setLocationRelativeTo(null);
        this.setIconImage(icon.getImage());
        this.setExtendedState(getExtendedState()|JFrame.MAXIMIZED_BOTH);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        table2 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        tf1 = new javax.swing.JTextField();
        tf2 = new javax.swing.JTextField();
        tf3 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        tf4 = new javax.swing.JTextField();
        tf5 = new javax.swing.JTextField();
        tf6 = new javax.swing.JTextField();

        jMenu1.setText("jMenu1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("lanego accounts.");
        setAlwaysOnTop(true);
        setBackground(new java.awt.Color(255, 204, 51));

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 0, 0));
        jButton1.setText("HOME");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        table1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "username", "password", "recovery password"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        table1.setShowGrid(false);
        table1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table1);

        table2.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        table2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "username", "password", "recovery password."
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(table2);

        jButton2.setBackground(new java.awt.Color(204, 255, 0));
        jButton2.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(51, 51, 51));
        jButton2.setText("add employee");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(255, 51, 153));
        jButton3.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jButton3.setForeground(new java.awt.Color(0, 0, 0));
        jButton3.setText("delete employeee");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(0, 0, 0));
        jButton4.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("ceo account");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(0, 153, 0));
        jButton5.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jButton5.setForeground(new java.awt.Color(0, 0, 0));
        jButton5.setText("add admin");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setBackground(new java.awt.Color(255, 153, 51));
        jButton6.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jButton6.setForeground(new java.awt.Color(0, 0, 0));
        jButton6.setText("delete admin");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setBackground(new java.awt.Color(51, 255, 51));
        jButton7.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jButton7.setForeground(new java.awt.Color(0, 0, 0));
        jButton7.setText("employees salaries ");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Current employees.");

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 0));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Current admins.");

        jLabel3.setText("selected employee.");

        tf1.setEditable(false);
        tf1.setBackground(new java.awt.Color(255, 255, 153));

        tf2.setEditable(false);
        tf2.setBackground(new java.awt.Color(255, 255, 153));

        tf3.setEditable(false);
        tf3.setBackground(new java.awt.Color(255, 255, 153));

        jLabel4.setText("selected admin.");

        tf4.setEditable(false);
        tf4.setBackground(new java.awt.Color(255, 153, 153));
        tf4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf4ActionPerformed(evt);
            }
        });

        tf5.setEditable(false);
        tf5.setBackground(new java.awt.Color(255, 153, 153));

        tf6.setEditable(false);
        tf6.setBackground(new java.awt.Color(255, 153, 153));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(70, 70, 70)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 54, Short.MAX_VALUE)
                                        .addComponent(tf1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                                        .addComponent(tf2, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                                        .addComponent(tf3, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jScrollPane1))
                                .addGap(18, 18, 18)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 678, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 75, Short.MAX_VALUE)
                                .addComponent(tf4, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 69, Short.MAX_VALUE)
                                .addComponent(tf5, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, Short.MAX_VALUE)
                                .addComponent(tf6, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jButton5)
                    .addComponent(jButton6)
                    .addComponent(jButton7))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 502, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tf1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tf2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tf3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tf4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tf5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tf6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
        try {
            new lane.mainwin_1().setVisible(true);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(accounts.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(accounts.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        String a1 = tf1.getText();
        
        if(a1.length()<=1){
            this.setVisible(false);
            JOptionPane.showMessageDialog(null, "No record selected!!");
            this.setVisible(true);
        }else{
             String response = JOptionPane.showInputDialog(this,"please confirm your action. \n"
                                                        + "records once deleted cannot be recovered\n"
                                                        + "press 'c' to continue any other action\n"
                                                        + "will automatically cancel the operation");
            String ans = response.toUpperCase();
            if (ans.equals("C")){
        try {
            Class.forName("org.sqlite.JDBC");
            con = DriverManager.getConnection("jdbc:sqlite:lng.db");
            
            Statement state = con.createStatement();
            ResultSet rs = state.executeQuery("select * from adm\n where un = \"" + a1 +"\";");
            if(rs.next()){
                String b1=rs.getString(1);
                if(b1.length()>1){
                JOptionPane.showMessageDialog(this, "could not delete because it's part of admin account");
                rs.close();
                }
            }else{
                rs.close();
                state.execute("delete from cmf\n where un = \"" + a1 +"\";");
            }              
            con.close();
            state.close();
            this.dispose();
            new accounts().setVisible(true);
            DefaultTableModel model = (DefaultTableModel) table1.getModel();
            model.setRowCount(0);
            showdata();
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(accounts.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(accounts.class.getName()).log(Level.SEVERE, null, ex);
        }
            }else{
                JOptionPane.showMessageDialog(this, "operation cancelled successfully.");
            }
        } 
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
          try {
            this.setVisible (false);
             cewindow();
        } catch (SQLException ex) {
            Logger.getLogger(lane2.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(lane2.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
            try {
            this.setVisible (false);
            con.close();
             new lane.lane2().cawindow();
        } catch (SQLException ex) {
            Logger.getLogger(lane2.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(lane2.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void tf4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf4ActionPerformed

    private void table1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table1MouseClicked
        DefaultTableModel model1 = (DefaultTableModel) table1.getModel();
        
        String a = model1.getValueAt(table1.getSelectedRow(), 0).toString();
        String b = model1.getValueAt(table1.getSelectedRow(), 1).toString();
        String c = model1.getValueAt(table1.getSelectedRow(), 2).toString();
        
        
        tf1.setText(a);
        tf2.setText(b);
        tf3.setText(c);
        
    }//GEN-LAST:event_table1MouseClicked

    private void table2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table2MouseClicked
        DefaultTableModel model2 = (DefaultTableModel) table2.getModel();
        
        String d = model2.getValueAt(table2.getSelectedRow(), 0).toString();
        String e = model2.getValueAt(table2.getSelectedRow(), 1).toString();
        String f = model2.getValueAt(table2.getSelectedRow(), 2).toString();
        
        tf4.setText(d);
        tf5.setText(e);
        tf6.setText(f);
    }//GEN-LAST:event_table2MouseClicked

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        String a4 = tf4.getText();
        
        if(a4.length()<=1){
            this.setVisible(false);
            JOptionPane.showMessageDialog(this, "No record selected!!");
            this.setVisible(true);
        }else{
             String response = JOptionPane.showInputDialog(this,"please confirm your action. \n"
                                                        + "records once deleted cannot be recovered\n"
                                                        + "press 'c' to continue any other action\n"
                                                        + "will automatically cancel the operation");
            String ans = response.toUpperCase();
            if (ans.equals("C")){
        try {
            Class.forName("org.sqlite.JDBC");
            con = DriverManager.getConnection("jdbc:sqlite:lng.db");
            
            Statement state = con.createStatement();
            state.execute("delete from adm\n where un = \"" + a4 +"\";");
            state.execute("delete from cmf\n where un = \"" + a4 +"\";");
                            
            con.close();
            state.close();
            this.dispose();
            new accounts().setVisible(true);
            DefaultTableModel model2 = (DefaultTableModel) table2.getModel();
            model2.setRowCount(0);
            showdata2();
        
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(accounts.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(accounts.class.getName()).log(Level.SEVERE, null, ex);
        }
            }else{
                JOptionPane.showMessageDialog(this, "operation cancelled successfully.");
            }
        } 
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
             try {
            this.setVisible (false);
             ceowindow();
        } catch (SQLException ex) {
            Logger.getLogger(lane2.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(lane2.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        try {
            this.dispose();
            new lane.salaries().setVisible(true);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(accounts.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(accounts.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(accounts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(accounts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(accounts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(accounts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new accounts().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(accounts.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(accounts.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
        //for create employee() admin window.
    JFrame frme3 = new JFrame("confirm create employee. only admin allowed");
    JButton frgt3 = new JButton("forgot password");
    JButton cnf3 = new JButton("confirm");
    JButton shw2 = new JButton("show");
    JButton hde2 = new JButton("hide");
    JTextField nme2 = new JTextField();
    JPasswordField ps12 = new JPasswordField();
    JLabel nmel2 = new JLabel("username");
    JLabel ps1l2 = new JLabel("pssword");
    JButton bck = new JButton("back");
    public void cewindow() throws SQLException, ClassNotFoundException{
        frme3.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        frme3.setSize(350, 200);
        frme3.setLocationRelativeTo(null);
        frme3.setLayout(null);
        frme3.setIconImage(icon.getImage());
        frme3.setResizable(false);
        frme3.getContentPane().setBackground(Color.blue);
        
        nme2.setBounds(150, 20, 150, 30);
        ps12.setBounds(150, 70, 150, 30);
        
        nmel2.setBounds(20, 20, 150, 30);
        ps1l2.setBounds(20, 70, 150, 30);
        
        frgt3.setBounds(180, 120, 70, 30);
        frgt3.setBackground(Color.green);
        frgt3.addActionListener(this);
        frgt3.setForeground(Color.red);
        
        shw2.setBounds(260, 120, 70, 30);
        shw2.setBackground(Color.orange);
        shw2.addActionListener(this);
        shw2.setForeground(Color.blue);
        
        hde2.setBounds(260, 120, 70, 30);
        hde2.setBackground(Color.blue);
        hde2.addActionListener(this);
        hde2.setForeground(Color.orange);
        hde2.setVisible(false);
        
        cnf3.setBounds(100, 120, 70, 30);
        cnf3.setBackground(Color.yellow);
        cnf3.addActionListener(this);
        cnf3.setForeground(Color.red);
        
        bck.setBounds(10, 120, 70, 30);
        bck.setBackground(Color.red);
        bck.addActionListener(this);
        bck.setForeground(Color.green);
        
        ps12.setText("");
        nme2.setText("");
        
        frme3.add(nmel2);
        frme3.add(ps1l2);
        frme3.add(nme2);
        frme3.add(ps12);
        frme3.add(bck);
        frme3.add(frgt3);
        frme3.add(cnf3);
        frme3.add(hde2);
        frme3.add(shw2);
        frme3.setVisible(true);
    }
    
    JFrame frme6 = new JFrame("only ceo allowed");
    JButton cnf6 = new JButton("confirm");
        public void ceowindow() throws SQLException, ClassNotFoundException{
        frme6.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        frme6.setSize(350, 200);
        frme6.setLocationRelativeTo(null);
        frme6.setLayout(null);
        frme6.setIconImage(icon.getImage());
        frme6.setResizable(false);
        frme6.getContentPane().setBackground(Color.blue);
        
        nme2.setBounds(150, 20, 150, 30);
        ps12.setBounds(150, 70, 150, 30);
        
        nmel2.setBounds(20, 20, 150, 30);
        ps1l2.setBounds(20, 70, 150, 30);
        
        frgt3.setBounds(180, 120, 70, 30);
        frgt3.setBackground(Color.green);
        frgt3.addActionListener(this);
        frgt3.setForeground(Color.red);
        
        shw2.setBounds(260, 120, 70, 30);
        shw2.setBackground(Color.orange);
        shw2.addActionListener(this);
        shw2.setForeground(Color.blue);
        
        hde2.setBounds(260, 120, 70, 30);
        hde2.setBackground(Color.blue);
        hde2.addActionListener(this);
        hde2.setForeground(Color.orange);
        hde2.setVisible(false);
        
        cnf6.setBounds(100, 120, 70, 30);
        cnf6.setBackground(Color.yellow);
        cnf6.addActionListener(this);
        cnf6.setForeground(Color.red);
        
        bck.setBounds(10, 120, 70, 30);
        bck.setBackground(Color.red);
        bck.addActionListener(this);
        bck.setForeground(Color.green);
        
        ps12.setText("");
        nme2.setText("");
        
        frme6.add(nmel2);
        frme6.add(ps1l2);
        frme6.add(nme2);
        frme6.add(ps12);
        frme6.add(bck);
        frme6.add(frgt3);
        frme6.add(cnf6);
        frme6.add(hde2);
        frme6.add(shw2);
        frme6.setVisible(true);
    }
    
    
        JFrame fpadm = new JFrame("forgot password. for admin.");
        JButton checka = new JButton("check details");
        JButton backa = new JButton("back");
        JLabel recovera = new JLabel("recovery word");
        JTextField codea = new JTextField();
        //window for fpadm()
        public void fpadmwin(){
            fpadm.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
            fpadm.setSize(350, 140);
            fpadm.setResizable(false);
            fpadm.setLocationRelativeTo(null);
            fpadm.setIconImage(icon.getImage());
            fpadm.setLayout(null);
            fpadm.getContentPane().setBackground(Color.pink);  
            
            checka.setBounds(135, 50, 120, 30);
            checka.setBackground(Color.yellow);
            checka.addActionListener(this);
            checka.setForeground(Color.red);
            
            recovera.setBounds(20, 10, 130, 30);
            codea.setBounds(160, 10, 150, 30);
            
            backa.setBounds(20, 50, 95, 30);
            backa.setBackground(Color.red);
            backa.addActionListener(this);
            backa.setForeground(Color.yellow);
            
            fpadm.add(checka);
            fpadm.add(recovera);
            fpadm.add(codea);
            fpadm.add(backa);
            fpadm.setVisible(true);
        }
        
                public void fpadm(){
            String a = codea.getText();
                try {
                            Class.forName("org.sqlite.JDBC");
                            con = DriverManager.getConnection("jdbc:sqlite:lng.db");
                            
                            Statement state11 = con.createStatement();
                            ResultSet rs = state11.executeQuery("select * from ceo where cd = \""+a+"\";");
                            
                            if(rs.next()){
                                String a1=rs.getString(1);
                                String a2=rs.getString(2);
                                String b3=rs.getString(3);
                                a = b3;
                                
                                con.close();
                                state11.close();
                                rs.close();
                                
                                JOptionPane.showMessageDialog(this, "your username is "+a1+".\n your password is "+a2+"\nkeep your details safe.");
                                
                                }else{
                                    JOptionPane.showMessageDialog(this, "provided recoverly word does not exist..");
                                }
                            con.close();
                            state11.close();
                            rs.close();
                        } catch (ClassNotFoundException ex) {
                            Logger.getLogger(lane2.class.getName()).log(Level.SEVERE, null, ex);
                        } catch (SQLException ex) {
                            Logger.getLogger(lane2.class.getName()).log(Level.SEVERE, null, ex);
                        }
        }
        //for create employee account window(cea)
    public static boolean hasData = false;
    JFrame frame1 = new JFrame("create employee account");
    JButton back2 = new JButton("back");
    JButton clear1 = new JButton("clear");
    JButton create1 = new JButton("create");
    JButton show1 = new JButton("show");
    JButton hide1 = new JButton("hide");
    JTextField name11 = new JTextField();
    JPasswordField pas11 = new JPasswordField();
    JPasswordField pas21 = new JPasswordField();
    JTextField code1 = new JTextField();
    JLabel lnamel1 = new JLabel("user name");
    JLabel pas1l1 = new JLabel("new password");
    JLabel pas2l1 = new JLabel("confirm password");
    JLabel codel1 = new JLabel("enter recovery word");
    public void createemployee() throws SQLException, ClassNotFoundException{
        frme3.dispose();
        frame1.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        frame1.setSize(350, 300);
        frame1.setLocationRelativeTo(null);
        frame1.setIconImage(icon.getImage());
        frame1.setResizable(false);
        frame1.setLayout(null);
        frame1.getContentPane().setBackground(Color.yellow);
        
        name11.setBounds(150, 20, 150, 30);
        pas11.setBounds(150, 70, 150, 30);
        pas21.setBounds(150, 120, 150, 30);
        code1.setBounds(150, 170, 150, 30);
        
        lnamel1.setBounds(20, 20, 150, 30);
        pas1l1.setBounds(20, 70, 150, 30);
        pas2l1 .setBounds(20, 120, 150, 30);
        codel1.setBounds(20, 170, 150, 30);
        
        clear1.setBounds(180, 220, 70, 30);
        clear1.setBackground(Color.green);
        clear1.addActionListener(this);
        clear1.setForeground(Color.red);
        
        show1.setBounds(260, 220, 70, 30);
        show1.setBackground(Color.orange);
        show1.addActionListener(this);
        show1.setForeground(Color.blue);
        
        hide1.setBounds(260, 220, 70, 30);
        hide1.setBackground(Color.blue);
        hide1.addActionListener(this);
        hide1.setForeground(Color.orange);
        hide1.setVisible(false);
        
        create1.setBounds(100, 220, 70, 30);
        create1.setBackground(Color.yellow);
        create1.addActionListener(this);
        create1.setForeground(Color.red);
        
        back2.setBounds(10, 220, 70, 30);
        back2.setBackground(Color.red);
        back2.addActionListener(this);
        back2.setForeground(Color.green);
        
        pas11.setText("");
        name11.setText("");
        pas21.setText("");
        code1.setText("");
        
        frame1.add(lnamel1);
        frame1.add(pas1l1);
        frame1.add(pas2l1 );
        frame1.add(codel1);
        frame1.add(name11);
        frame1.add(pas11);
        frame1.add(pas21);
        frame1.add(code1);
        frame1.add(back2);
        frame1.add(clear1);
        frame1.add(create1);
        frame1.add(hide1);
        frame1.add(show1);
        frame1.setVisible(true);
    }
    //for selecting data from database and setting it to the table
    public static void showdata() throws SQLException, ClassNotFoundException {
        Class.forName("org.sqlite.JDBC");
        con = DriverManager.getConnection("jdbc:sqlite:lng.db");
        Statement state11 = con.createStatement();
        ResultSet rs = state11.executeQuery("select * from cmf;");
         while(rs.next()){
             
                        String s0=rs.getString(1);
                        String s1=rs.getString(2);
                        String s2=rs.getString(3);
                        
                        Object[] obj = {s0, s1, s2};
                        DefaultTableModel model1 = (DefaultTableModel) table1.getModel();
                        model1.addRow(obj);
                        
                        
         }
         DefaultTableModel model1 = (DefaultTableModel) table1.getModel();
         if(model1.getRowCount()>0){
            model1.removeRow(0);
         }
         con.close();
         rs.close();
         state11.close();
                        
    }
    public static void showdata2() throws SQLException, ClassNotFoundException {
        Class.forName("org.sqlite.JDBC");
        con = DriverManager.getConnection("jdbc:sqlite:lng.db");
        Statement state11 = con.createStatement();
        ResultSet rs = state11.executeQuery("select * from adm;");
         while(rs.next()){
             
                        String s0=rs.getString(1);
                        String s1=rs.getString(2);
                        String s2=rs.getString(3);
                        
                        Object[] obj = {s0, s1, s2};
                        DefaultTableModel model1 = (DefaultTableModel) table2.getModel();
                        model1.addRow(obj);
                        
         }
         DefaultTableModel model1 = (DefaultTableModel) table2.getModel();
         if(model1.getRowCount()>0){
            model1.removeRow(0);
         }
         con.close();
         rs.close();
         state11.close();
                        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private static javax.swing.JTable table1;
    private static javax.swing.JTable table2;
    private javax.swing.JTextField tf1;
    private javax.swing.JTextField tf2;
    private javax.swing.JTextField tf3;
    private javax.swing.JTextField tf4;
    private javax.swing.JTextField tf5;
    private javax.swing.JTextField tf6;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
    
        if (e.getSource()==checka){
            fpadm();
        }
        
        if (e.getSource()==frgt3){
            fpadmwin();
        }
        
        if (e.getSource()==shw2||e.getSource()==show1){
            hde2.setVisible(true);
            shw2.setVisible(false);
            hide1.setVisible(true);
            show1.setVisible(false);
            ps12.setEchoChar((char)0);
            pas11.setEchoChar((char)0);
            pas21.setEchoChar((char)0);
        }
        
        if (e.getSource()==hde2||e.getSource()==hide1){
            hde2.setVisible(false);
            shw2.setVisible(true);
            hide1.setVisible(false);
            show1.setVisible(true);
            ps12.setEchoChar('*');
            pas11.setEchoChar('*');
            pas21.setEchoChar('*');
        }
        
        if (e.getSource()==backa){
            fpadm.dispose();
        }
        if (e.getSource()==bck||e.getSource()==back2){
                frme3.dispose();
                frame1.dispose();
                this.dispose();
            try {
                new accounts().setVisible(true);
            } catch (SQLException ex) {
                Logger.getLogger(accounts.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(accounts.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (e.getSource()==bck4){
                frme4.dispose();
                this.dispose();
            try {
                new mainwin_1().setVisible(true);
            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(accounts.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        if (e.getSource()==cnf3){
            frme3.dispose();
            String a = nme2.getText();
            String b = ps12.getText();
            if(a.equals("")||b.equals("")){
                JOptionPane.showMessageDialog(null, "empty field/fields!.");
                frme3.setVisible(true);
            }
            else{
                if(b.length()>=2){
                    try {
                        Class.forName("org.sqlite.JDBC");
                        con = DriverManager.getConnection("jdbc:sqlite:lng.db");
                        
                        state = con.createStatement();
                        ResultSet rs = state.executeQuery("select * from ceo where pw = \""+b+"\" and un=\""+a+"\";");
                        
                        if(rs.next()){
                            String c1=rs.getString(1);
                            String c2=rs.getString(2);
                            String c3=rs.getString(3);
                            a = c1;
                            b = c2;
                            c2 = c3;
                            
                            con.close();
                            state.close();
                            rs.close();
                            frme3.dispose();
                            this.dispose();
                            createemployee();
                            
                        }else{
                            JOptionPane.showMessageDialog(this, " wrong username or password..");
                            frme3.dispose();
                            this.dispose();
                            frme3.setVisible(true);
                        }
                       con.close();
                       state.close();
                    } catch (SQLException ex) {
                        Logger.getLogger(lane2.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(lane2.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }else{
                    JOptionPane.showMessageDialog(null, "wrong password.");
                    frme3.setVisible(true);
                }
            }
        }
        if (e.getSource()==cnf6){
            frme6.dispose();
            String a = nme2.getText();
            String b = ps12.getText();
            if(a.equals("")||b.equals("")){
                JOptionPane.showMessageDialog(null, "empty field/fields!.");
                frme6.setVisible(true);
            }
            else{
                if(b.length()>=2){
                    try {
                        Class.forName("org.sqlite.JDBC");
                        con = DriverManager.getConnection("jdbc:sqlite:lng.db");
                        
                        state = con.createStatement();
                        ResultSet rs = state.executeQuery("select * from ceo where pw = \""+b+"\" and un=\""+a+"\";");
                        
                        if(rs.next()){
                            String c1=rs.getString(1);
                            String c2=rs.getString(2);
                            String c3=rs.getString(3);
                            a = c1;
                            b = c2;
                            c2 = c3;
                            
                            con.close();
                            state.close();
                            rs.close();
                            frme6.dispose();
                            this.dispose();
                            new lane.ceoacc().setVisible(true);
                            
                        }else{
                            JOptionPane.showMessageDialog(this, " wrong username or password..");
                            frme6.dispose();
                            this.dispose();
                            frme6.setVisible(true);
                        }
                       con.close();
                       state.close();
                    } catch (SQLException ex) {
                        Logger.getLogger(lane2.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(lane2.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }else{
                    JOptionPane.showMessageDialog(null, "wrong password.");
                    frme6.setVisible(true);
                }
            }
        }
        
        if (e.getSource()==cnf4){
            frme3.dispose();
            String a = nme2.getText();
            String b = ps12.getText();
            if(a.equals("")||b.equals("")){
                JOptionPane.showMessageDialog(null, "empty field/fields!.");
                frme3.setVisible(true);
            }
            else{
                if(b.length()>=2){
                    try {
                        Class.forName("org.sqlite.JDBC");
                        con = DriverManager.getConnection("jdbc:sqlite:lng.db");
                        
                        state = con.createStatement();
                        ResultSet rs = state.executeQuery("select * from ceo where pw = \""+b+"\" and un=\""+a+"\";");
                        
                        if(rs.next()){
                            String c1=rs.getString(1);
                            String c2=rs.getString(2);
                            String c3=rs.getString(3);
                            a = c1;
                            b = c2;
                            c2 = c3;
                            
                            con.close();
                            state.close();
                            rs.close();
                            frme4.dispose();
                            this.dispose();
                            new accounts().setVisible(true);
                            
                        }else{
                            JOptionPane.showMessageDialog(this, " wrong username or password..");
                            frme3.dispose();
                            this.dispose();
                            frme3.setVisible(true);
                        }
                       con.close();
                       state.close();
                    } catch (SQLException ex) {
                        Logger.getLogger(lane2.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(lane2.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }else{
                    JOptionPane.showMessageDialog(null, "wrong password.");
                    frme3.setVisible(true);
                }
            }
        }
        
        if (e.getSource()==clear1){
            pas11.setText("");
            name11.setText("");
            pas21.setText("");
            code1.setText("");
        }
        
        if (e.getSource()==create1){
            
                String a = name11.getText();
                String b = pas11.getText();
                String c = code1.getText();
                String d = pas21.getText();
                
                if(a.equals("")||b.equals("")||c.equals("")||d.equals("")){
                    JOptionPane.showMessageDialog(null, "please fill all the fields to proceed.");
                }
                else{
                    if(d.equals(b)&&d.length()>=6){
                        
                        try {
                            Class.forName("org.sqlite.JDBC");
                            con = DriverManager.getConnection("jdbc:sqlite:lng.db");
                            
                            state = con.createStatement();
                            state.execute("insert into cmf (un, pw, cd)\n" +
                                    "values(\""+a+"\",\""+b+"\",\""+c+"\");");
                            
                            
                            con.close();
                            state.close();
                            JOptionPane.showMessageDialog(null, "please make sure you don't forget your password");
                            JOptionPane.showMessageDialog(null, "recoverly word will be usefull in case you forget your password");
                            JOptionPane.showMessageDialog(null, "your employee account was created succecfully");
                            
                            con.close();
                            state.close();
                            
                            new accounts().setVisible(true);
                             frame1.dispose();

                        } catch (SQLException ex) {
                            JOptionPane.showMessageDialog(null, "username password or recoverly word already used.");
                            ex.printStackTrace();
                        } catch (ClassNotFoundException ex) {
                            Logger.getLogger(lane2.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }else{
                        JOptionPane.showMessageDialog(null, "passwords do not match or is too short. \npassword must be more than 6 charactors");
                    }
                }
        }
    
    }
    
    JFrame frme4 = new JFrame("ceo only allowed.");
    JButton cnf4 = new JButton("confirm");
    JButton bck4 = new JButton("back");
    void cewindow2() {
    
        frme4.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        frme4.setSize(350, 200);
        frme4.setLocationRelativeTo(null);
        frme4.setLayout(null);
        frme4.setIconImage(icon.getImage());
        frme4.setResizable(false);
        frme4.getContentPane().setBackground(Color.blue);
        
        nme2.setBounds(150, 20, 150, 30);
        ps12.setBounds(150, 70, 150, 30);
        
        nmel2.setBounds(20, 20, 150, 30);
        ps1l2.setBounds(20, 70, 150, 30);
        
        frgt3.setBounds(180, 120, 70, 30);
        frgt3.setBackground(Color.green);
        frgt3.addActionListener(this);
        frgt3.setForeground(Color.red);
        
        shw2.setBounds(260, 120, 70, 30);
        shw2.setBackground(Color.orange);
        shw2.addActionListener(this);
        shw2.setForeground(Color.blue);
        
        hde2.setBounds(260, 120, 70, 30);
        hde2.setBackground(Color.blue);
        hde2.addActionListener(this);
        hde2.setForeground(Color.orange);
        hde2.setVisible(false);
        
        cnf4.setBounds(100, 120, 70, 30);
        cnf4.setBackground(Color.yellow);
        cnf4.addActionListener(this);
        cnf4.setForeground(Color.red);
        
        bck4.setBounds(10, 120, 70, 30);
        bck4.setBackground(Color.red);
        bck4.addActionListener(this);
        bck4.setForeground(Color.green);
        
        ps12.setText("");
        nme2.setText("");
        
        frme4.add(nmel2);
        frme4.add(ps1l2);
        frme4.add(nme2);
        frme4.add(ps12);
        frme4.add(bck4);
        frme4.add(frgt3);
        frme4.add(cnf4);
        frme4.add(hde2);
        frme4.add(shw2);
        frme4.setVisible(true);
    
    }

}
