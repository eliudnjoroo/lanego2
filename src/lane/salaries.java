package lane;

import java.sql.*;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author user
 */
public class salaries extends javax.swing.JFrame {
ImageIcon icon=new ImageIcon("lan.jpg");
String a12;
    /**
     * Creates new form salaries
     */
    public salaries() throws ClassNotFoundException, SQLException {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setIconImage(icon.getImage());
        locate();
        this.setExtendedState(getExtendedState()|JFrame.MAXIMIZED_BOTH);
        a12 = tt5.getText();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        wts = new javax.swing.JTextField();
        tos = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        t1 = new javax.swing.JTable();
        tt4 = new javax.swing.JTextField();
        tt1 = new javax.swing.JTextField();
        tt2 = new javax.swing.JTextField();
        tt3 = new javax.swing.JTextField();
        tt5 = new javax.swing.JTextField();
        tt6 = new javax.swing.JTextField();
        tt7 = new javax.swing.JTextField();
        tt8 = new javax.swing.JTextField();
        tt9 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        confirm = new javax.swing.JButton();
        nmt = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("lanego employee's details");
        setBackground(new java.awt.Color(0, 0, 0));

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setForeground(new java.awt.Color(0, 0, 0));
        jButton1.setText("HOME");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(255, 51, 51));
        jButton2.setForeground(new java.awt.Color(0, 255, 0));
        jButton2.setText("BACK");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(102, 255, 102));
        jButton3.setForeground(new java.awt.Color(255, 51, 51));
        jButton3.setText("add new record");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(255, 153, 204));
        jButton4.setForeground(new java.awt.Color(0, 51, 102));
        jButton4.setText("modify record");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(255, 255, 153));
        jButton5.setForeground(new java.awt.Color(255, 51, 51));
        jButton5.setText("search with");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setBackground(new java.awt.Color(102, 0, 102));
        jButton6.setForeground(new java.awt.Color(255, 255, 51));
        jButton6.setText("refresh");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setBackground(new java.awt.Color(204, 204, 0));
        jButton7.setForeground(new java.awt.Color(0, 51, 153));
        jButton7.setText("saerch ");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        wts.setEditable(false);
        wts.setBackground(new java.awt.Color(255, 204, 255));
        wts.setForeground(new java.awt.Color(0, 0, 0));
        wts.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        wts.setText("date");

        tos.setBackground(new java.awt.Color(255, 204, 255));
        tos.setForeground(new java.awt.Color(0, 0, 0));
        tos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tosActionPerformed(evt);
            }
        });

        t1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "first name", "second name", "third name", "phone number", "id number", "nhif", "role", "monthly salary", "bank account", "date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        t1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                t1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(t1);
        if (t1.getColumnModel().getColumnCount() > 0) {
            t1.getColumnModel().getColumn(9).setPreferredWidth(210);
        }

        tt4.setEditable(false);

        tt1.setEditable(false);

        tt2.setEditable(false);
        tt2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tt2ActionPerformed(evt);
            }
        });

        tt3.setEditable(false);

        tt5.setEditable(false);

        tt6.setEditable(false);

        tt7.setEditable(false);

        tt8.setEditable(false);

        tt9.setEditable(false);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("first name");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("second name");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("third name");

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("phone number");

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("id number");

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("nhif");

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("role");

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("salary");

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("bank account");

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("currently selected records");

        jButton8.setBackground(new java.awt.Color(255, 0, 0));
        jButton8.setForeground(new java.awt.Color(0, 51, 255));
        jButton8.setText("delete record");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        confirm.setBackground(new java.awt.Color(0, 0, 0));
        confirm.setForeground(new java.awt.Color(0, 255, 0));
        confirm.setText("confrim ");
        confirm.setEnabled(false);
        confirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmActionPerformed(evt);
            }
        });

        nmt.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(wts, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(tos)
                        .addGap(6, 6, 6)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13)
                        .addComponent(confirm, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(176, 176, 176)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nmt, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(131, 131, 131)
                                .addComponent(jLabel10)))
                        .addGap(337, 337, 337)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(66, 66, 66)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tt1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(tt2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(tt3, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62)
                        .addComponent(tt4, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13)
                        .addComponent(tt5, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59)
                        .addComponent(tt6, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(tt7, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(66, 66, 66)
                        .addComponent(tt8, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13)
                        .addComponent(tt9, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(wts, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(tos, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 442, Short.MAX_VALUE)
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(confirm, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(nmt, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel5))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel6))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel7))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel8))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel9)))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tt1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tt2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tt3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tt4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tt5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tt6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tt7, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tt8, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tt9, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
        try {
            new lane.mainwin_1().setVisible(true);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(salaries.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(salaries.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
        try {
            new lane.accounts().setVisible(true);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(salaries.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(salaries.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void tosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tosActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
   try{
           int j = Integer.parseInt(JOptionPane.showInputDialog(this, "available options to search with\n"
                    + "0 - monthly salary"
                    + "\n1 - first name"
                    + "\n2 - second name"
                    + "\n3 - third name"
                    + "\n4 - phone number"
                    + "\n5 - id number"
                    + "\n6 - nhif"
                    + "\n7 - role"
                    + "\n8 - bank account"
                    + "\n9 - date"));
            
            if(j==1){
                wts.setText("");
                wts.setText("first name");
            }
            else if(j==2){
                wts.setText("");
                wts.setText("second name");
            }
            else if(j==3){
                wts.setText("");
                wts.setText("third name");
            }
            else if(j==4){
                wts.setText("");
                wts.setText("phone number");
            }
            else if(j==5){
                wts.setText("");
                wts.setText("id number");
            }
            else if(j==6){
                wts.setText("");
                wts.setText("nhif");
            }
            else if(j==7){
                wts.setText("");
                wts.setText("role");
            }
            else if(j==8){
                wts.setText("");
                wts.setText("bank account");
            }
            else if(j==9){
                wts.setText("");
                wts.setText("date");
            }
            else if(j==0){
                wts.setText("");
                wts.setText("monthly salary");
            }
            else{
            JOptionPane.showMessageDialog(rootPane, "invalid choice");
            }
        
   }catch(NumberFormatException e){
       JOptionPane.showMessageDialog(rootPane, "invalid choice");
   }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void tt2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tt2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tt2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        this.dispose();
        new lane.nememp().setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void t1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_t1MouseClicked
        
    try {
        confirm.setEnabled(false);
        tt1.setEditable(false);
        tt2.setEditable(false);
        tt3.setEditable(false);
        tt4.setEditable(false);
        tt5.setEditable(false);
        tt6.setEditable(false);
        tt7.setEditable(false);
        tt8.setEditable(false);
        tt9.setEditable(false);
        
        DefaultTableModel model = (DefaultTableModel) t1.getModel();
       
        String a = model.getValueAt(t1.getSelectedRow(), 0).toString();
        String b = model.getValueAt(t1.getSelectedRow(), 1).toString();
        String c = model.getValueAt(t1.getSelectedRow(), 2).toString();
        String d = model.getValueAt(t1.getSelectedRow(), 3).toString();
        String e = model.getValueAt(t1.getSelectedRow(), 4).toString();
        String f = model.getValueAt(t1.getSelectedRow(), 5).toString();
        String g = model.getValueAt(t1.getSelectedRow(), 6).toString();
        String h = model.getValueAt(t1.getSelectedRow(), 7).toString();
        String i = model.getValueAt(t1.getSelectedRow(), 8).toString();
        String j = model.getValueAt(t1.getSelectedRow(), 9).toString();
        
        tt1.setText(a);
        tt2.setText(b);
        tt3.setText(c);
        tt4.setText(d);
        tt5.setText(e);
        tt6.setText(f);
        tt7.setText(g);
        tt8.setText(h);
        tt9.setText(i);
        nmt.setText(j);
        
        locate();
    } catch (ClassNotFoundException | SQLException ex) {
        Logger.getLogger(salaries.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_t1MouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        String a6 = tt1.getText();
        String b6 = tt2.getText();
        String c6 = tt3.getText();
        String d6 = tt4.getText();
        String e6 = tt5.getText();
        String f6 = tt6.getText();
        String g6 = tt7.getText();
        String h6 = tt8.getText();
        String i6 = tt9.getText();
        if(a6.length()<1||b6.length()<1||c6.length()<1||d6.length()<1||e6.length()<1||f6.length()<1||g6.length()<1||h6.length()<1||i6.length()<1){
            JOptionPane.showMessageDialog(rootPane, "no record selectd");
        }else{
        tt1.setEditable(true);
        tt2.setEditable(true);
        tt3.setEditable(true);
        tt4.setEditable(true);
        tt5.setEditable(true);
        tt6.setEditable(true);
        tt7.setEditable(true);
        tt8.setEditable(true);
        tt9.setEditable(true);
        confirm.setEnabled(true);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void confirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmActionPerformed
        String a6 = tt1.getText();
        String b6 = tt2.getText();
        String c6 = tt3.getText();
        String d6 = tt4.getText();
        String e6 = tt5.getText();
        String f6 = tt6.getText();
        String g6 = tt7.getText();
        String h6 = tt8.getText();
        String i6 = tt9.getText();
        String j6 = nmt.getText();
        if(a6.length()<1||b6.length()<1||c6.length()<1||d6.length()<1||e6.length()<1||f6.length()<1||g6.length()<1||h6.length()<1||i6.length()<1||j6.length()<1){
            JOptionPane.showMessageDialog(rootPane, "no record selectd");
        }else{
            try {
                tt1.setEditable(false);
                tt2.setEditable(false);
                tt3.setEditable(false);
                tt4.setEditable(false);
                tt5.setEditable(false);
                tt6.setEditable(false);
                tt7.setEditable(false);
                tt8.setEditable(false);
                tt9.setEditable(false);
                confirm.setEnabled(false);
                
                Class.forName("org.sqlite.JDBC");
                Connection con = DriverManager.getConnection("jdbc:sqlite:lng.db");
                Statement state3 = con.createStatement();
                state3.execute("update sls\n" +
                                "set ca = \""+a6+"\",\n" +
                                "fn = \""+b6+"\",\n" +
                                "sn = \""+c6+"\",\n" +
                                "tn = \""+d6+"\",\n" +
                                "id = \""+e6+"\",\n" +
                                "pn = \""+f6+"\",\n" +
                                "vil = \""+g6+"\",\n" +
                                "la = \""+h6+"\",\n" +
                                "pv = \""+i6+"\"\n" +
                                "where ac = \""+j6+"\";");
                con.close();
                state3.close();
                JOptionPane.showMessageDialog(this, "record modified succefully.");
                locate();
                
            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(salaries.class.getName()).log(Level.SEVERE, null, ex);
            }
        
        }
    }//GEN-LAST:event_confirmActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
    try {
        locate();
    } catch (ClassNotFoundException ex) {
        Logger.getLogger(salaries.class.getName()).log(Level.SEVERE, null, ex);
    } catch (SQLException ex) {
        Logger.getLogger(salaries.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
    String j6 = nmt.getText(); 
    int choice;
    if(j6.length()>3){
        try{
            choice = Integer.parseInt(JOptionPane.showInputDialog(null, "once deleted cannot be recovered.\n"
                + "1 - continue delete\nany other choice - cancel delete"));
        if (choice == 1){
    try {
        Class.forName("org.sqlite.JDBC");
        Connection con = DriverManager.getConnection("jdbc:sqlite:lng.db");
        Statement state5 = con.createStatement();
        state5.execute("delete from sls\n" +
                "where ac = \""+j6+"\";");
        con.close();
        state5.close();
        new lane.salaries().setVisible(true);
    } catch (ClassNotFoundException ex) {
        Logger.getLogger(salaries.class.getName()).log(Level.SEVERE, null, ex);
    } catch (SQLException ex) {
        Logger.getLogger(salaries.class.getName()).log(Level.SEVERE, null, ex);
    }
    }else{
        JOptionPane.showMessageDialog(this, "operation canceled succsfully.");
        }}catch(NumberFormatException e){
            JOptionPane.showMessageDialog(this, "operation canceled succsfully.");
            try {
                new lane.salaries().setVisible(true);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(salaries.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(salaries.class.getName()).log(Level.SEVERE, null, ex);
            }
        }}else{
    
        JOptionPane.showMessageDialog(this, "no record selected.");
    
    }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        String ss1 = wts.getText();
        String ss2 = tos.getText();
        if(ss2.length()>0){
            switch(ss1){
                //------------------------------------------------------1
        case "date":
                    {
                        String s0 = null;
                        try {
                            Connection con = DriverManager.getConnection("jdbc:sqlite:lng.db");
                            Statement state = con.createStatement();
                            ResultSet rs = state.executeQuery("select * from sls where ac >= \""+ss2+"\";");
                            while(rs.next()){
             
                                s0=rs.getString(1);
                                String s1=rs.getString(2);
                                String s2=rs.getString(3);
                                String s3=rs.getString(4);
                                String s4=rs.getString(5);
                                String s5=rs.getString(6);
                                String s6=rs.getString(7);
                                String s7=rs.getString(8);
                                String s8=rs.getString(9);
                                String s9=rs.getString(10);
                        
                            Object[] obj = {s0, s1, s2, s3, s4, s5, s6, s7, s8, s9};
                            DefaultTableModel model1 = (DefaultTableModel) t1.getModel();
                            model1.setRowCount(0);
                            model1.addRow(obj);
                        
                                }  
                        if (s0 == null){
                            
                            JOptionPane.showMessageDialog(this, "no record saved as "+ss2+","
                                    + "\nin the "+ss1+" category.");
                    
                    }
                        } catch (SQLException ex) {
                            Logger.getLogger(salaries.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        break;
                    }
                    //---------------------------------------------2
        case "bank account":
                    {
                        String s0 = null;
                        try {
                            Connection con = DriverManager.getConnection("jdbc:sqlite:lng.db");
                            Statement state = con.createStatement();
                            ResultSet rs = state.executeQuery("select * from sls where pv >= \""+ss2+"\";");
                            while(rs.next()){
             
                                s0=rs.getString(1);
                                String s1=rs.getString(2);
                                String s2=rs.getString(3);
                                String s3=rs.getString(4);
                                String s4=rs.getString(5);
                                String s5=rs.getString(6);
                                String s6=rs.getString(7);
                                String s7=rs.getString(8);
                                String s8=rs.getString(9);
                                String s9=rs.getString(10);
                        
                            Object[] obj = {s0, s1, s2, s3, s4, s5, s6, s7, s8, s9};
                            DefaultTableModel model1 = (DefaultTableModel) t1.getModel();
                            model1.setRowCount(0);
                            model1.addRow(obj);
                        
                                }  
                        if (s0 == null){
                            
                            JOptionPane.showMessageDialog(this, "no record saved as "+ss2+","
                                    + "\nin the "+ss1+" category.");
                    
                    }
                        } catch (SQLException ex) {
                            Logger.getLogger(salaries.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        break;
                    }
                    //---------------------------------------------------3
        case "monthly salary":
                    {
                        String s0 = null;
                        try {
                            Connection con = DriverManager.getConnection("jdbc:sqlite:lng.db");
                            Statement state = con.createStatement();
                            ResultSet rs = state.executeQuery("select * from sls where la >= \""+ss2+"\";");
                            while(rs.next()){
             
                                s0=rs.getString(1);
                                String s1=rs.getString(2);
                                String s2=rs.getString(3);
                                String s3=rs.getString(4);
                                String s4=rs.getString(5);
                                String s5=rs.getString(6);
                                String s6=rs.getString(7);
                                String s7=rs.getString(8);
                                String s8=rs.getString(9);
                                String s9=rs.getString(10);
                        
                            Object[] obj = {s0, s1, s2, s3, s4, s5, s6, s7, s8, s9};
                            DefaultTableModel model1 = (DefaultTableModel) t1.getModel();
                            model1.setRowCount(0);
                            model1.addRow(obj);
                        
                                }  
                        if (s0 == null){
                            
                            JOptionPane.showMessageDialog(this, "no record saved as "+ss2+","
                                    + "\nin the "+ss1+" category.");
                    
                    }
                        } catch (SQLException ex) {
                            Logger.getLogger(salaries.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        break;
                    }
                    // ------------------------------------------------4
        case "role":
                    {
                        String s0 = null;
                        try {
                            Connection con = DriverManager.getConnection("jdbc:sqlite:lng.db");
                            Statement state = con.createStatement();
                            ResultSet rs = state.executeQuery("select * from sls where vil >= \""+ss2+"\";");
                            while(rs.next()){
             
                                s0=rs.getString(1);
                                String s1=rs.getString(2);
                                String s2=rs.getString(3);
                                String s3=rs.getString(4);
                                String s4=rs.getString(5);
                                String s5=rs.getString(6);
                                String s6=rs.getString(7);
                                String s7=rs.getString(8);
                                String s8=rs.getString(9);
                                String s9=rs.getString(10);
                        
                            Object[] obj = {s0, s1, s2, s3, s4, s5, s6, s7, s8, s9};
                            DefaultTableModel model1 = (DefaultTableModel) t1.getModel();
                            model1.setRowCount(0);
                            model1.addRow(obj);
                        
                                }  
                        if (s0 == null){
                            
                            JOptionPane.showMessageDialog(this, "no record saved as "+ss2+","
                                    + "\nin the "+ss1+" category.");
                    
                    }
                        } catch (SQLException ex) {
                            Logger.getLogger(salaries.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        break;
                    }
                    //------------------------------------------------------------5
        case "nhif":
                    {
                        String s0 = null;
                        try {
                            Connection con = DriverManager.getConnection("jdbc:sqlite:lng.db");
                            Statement state = con.createStatement();
                            ResultSet rs = state.executeQuery("select * from sls where pn >= \""+ss2+"\";");
                            while(rs.next()){
             
                                s0=rs.getString(1);
                                String s1=rs.getString(2);
                                String s2=rs.getString(3);
                                String s3=rs.getString(4);
                                String s4=rs.getString(5);
                                String s5=rs.getString(6);
                                String s6=rs.getString(7);
                                String s7=rs.getString(8);
                                String s8=rs.getString(9);
                                String s9=rs.getString(10);
                        
                            Object[] obj = {s0, s1, s2, s3, s4, s5, s6, s7, s8, s9};
                            DefaultTableModel model1 = (DefaultTableModel) t1.getModel();
                            model1.setRowCount(0);
                            model1.addRow(obj);
                        
                                }  
                        if (s0 == null){
                            
                            JOptionPane.showMessageDialog(this, "no record saved as "+ss2+","
                                    + "\nin the "+ss1+" category.");
                    
                    }
                        } catch (SQLException ex) {
                            Logger.getLogger(salaries.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        break;
                    }
                    //-----------------------------------------------------------6
        case "id number":
                    {
                        String s0 = null;
                        try {
                            Connection con = DriverManager.getConnection("jdbc:sqlite:lng.db");
                            Statement state = con.createStatement();
                            ResultSet rs = state.executeQuery("select * from sls where id >= \""+ss2+"\";");
                            while(rs.next()){
             
                                s0=rs.getString(1);
                                String s1=rs.getString(2);
                                String s2=rs.getString(3);
                                String s3=rs.getString(4);
                                String s4=rs.getString(5);
                                String s5=rs.getString(6);
                                String s6=rs.getString(7);
                                String s7=rs.getString(8);
                                String s8=rs.getString(9);
                                String s9=rs.getString(10);
                        
                            Object[] obj = {s0, s1, s2, s3, s4, s5, s6, s7, s8, s9};
                            DefaultTableModel model1 = (DefaultTableModel) t1.getModel();
                            model1.setRowCount(0);
                            model1.addRow(obj);
                        
                                }  
                        if (s0 == null){
                            
                            JOptionPane.showMessageDialog(this, "no record saved as "+ss2+","
                                    + "\nin the "+ss1+" category.");
                    
                    }
                        } catch (SQLException ex) {
                            Logger.getLogger(salaries.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        break;
                    }
                    //-----------------------------------------7
        case "phone number":
                    {
                        String s0 = null;
                        try {
                            Connection con = DriverManager.getConnection("jdbc:sqlite:lng.db");
                            Statement state = con.createStatement();
                            ResultSet rs = state.executeQuery("select * from sls where tn >= \""+ss2+"\";");
                            while(rs.next()){
             
                                s0=rs.getString(1);
                                String s1=rs.getString(2);
                                String s2=rs.getString(3);
                                String s3=rs.getString(4);
                                String s4=rs.getString(5);
                                String s5=rs.getString(6);
                                String s6=rs.getString(7);
                                String s7=rs.getString(8);
                                String s8=rs.getString(9);
                                String s9=rs.getString(10);
                        
                            Object[] obj = {s0, s1, s2, s3, s4, s5, s6, s7, s8, s9};
                            DefaultTableModel model1 = (DefaultTableModel) t1.getModel();
                            model1.setRowCount(0);
                            model1.addRow(obj);
                        
                                }  
                        if (s0 == null){
                            
                            JOptionPane.showMessageDialog(this, "no record saved as "+ss2+","
                                    + "\nin the "+ss1+" category.");
                    
                    }
                        } catch (SQLException ex) {
                            Logger.getLogger(salaries.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        break;
                    }
                    //--------------------------------------------8
        case "third name":
                    {
                        String s0 = null;
                        try {
                            Connection con = DriverManager.getConnection("jdbc:sqlite:lng.db");
                            Statement state = con.createStatement();
                            ResultSet rs = state.executeQuery("select * from sls where sn >= \""+ss2+"\";");
                            while(rs.next()){
             
                                s0=rs.getString(1);
                                String s1=rs.getString(2);
                                String s2=rs.getString(3);
                                String s3=rs.getString(4);
                                String s4=rs.getString(5);
                                String s5=rs.getString(6);
                                String s6=rs.getString(7);
                                String s7=rs.getString(8);
                                String s8=rs.getString(9);
                                String s9=rs.getString(10);
                        
                            Object[] obj = {s0, s1, s2, s3, s4, s5, s6, s7, s8, s9};
                            DefaultTableModel model1 = (DefaultTableModel) t1.getModel();
                            model1.setRowCount(0);
                            model1.addRow(obj);
                        
                                }  
                        if (s0 == null){
                            
                            JOptionPane.showMessageDialog(this, "no record saved as "+ss2+","
                                    + "\nin the "+ss1+" category.");
                    
                    }
                        } catch (SQLException ex) {
                            Logger.getLogger(salaries.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        break;
                    }
                    //----------------------------------------9
        case "second name":
                    {
                        String s0 = null;
                        try {
                            Connection con = DriverManager.getConnection("jdbc:sqlite:lng.db");
                            Statement state = con.createStatement();
                            ResultSet rs = state.executeQuery("select * from sls where fn >= \""+ss2+"\";");
                            while(rs.next()){
             
                                s0=rs.getString(1);
                                String s1=rs.getString(2);
                                String s2=rs.getString(3);
                                String s3=rs.getString(4);
                                String s4=rs.getString(5);
                                String s5=rs.getString(6);
                                String s6=rs.getString(7);
                                String s7=rs.getString(8);
                                String s8=rs.getString(9);
                                String s9=rs.getString(10);
                        
                            Object[] obj = {s0, s1, s2, s3, s4, s5, s6, s7, s8, s9};
                            DefaultTableModel model1 = (DefaultTableModel) t1.getModel();
                            model1.setRowCount(0);
                            model1.addRow(obj);
                        
                                }  
                        if (s0 == null){
                            
                            JOptionPane.showMessageDialog(this, "no record saved as "+ss2+","
                                    + "\nin the "+ss1+" category.");
                    
                    }
                        } catch (SQLException ex) {
                            Logger.getLogger(salaries.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        break;
                    }
                    //=-------------------------------------------10
        case "first name":
                    {
                        String s0 = null;
                        try {
                            Connection con = DriverManager.getConnection("jdbc:sqlite:lng.db");
                            Statement state = con.createStatement();
                            ResultSet rs = state.executeQuery("select * from sls where ca >= \""+ss2+"\";");
                            while(rs.next()){
             
                                s0=rs.getString(1);
                                String s1=rs.getString(2);
                                String s2=rs.getString(3);
                                String s3=rs.getString(4);
                                String s4=rs.getString(5);
                                String s5=rs.getString(6);
                                String s6=rs.getString(7);
                                String s7=rs.getString(8);
                                String s8=rs.getString(9);
                                String s9=rs.getString(10);
                        
                            Object[] obj = {s0, s1, s2, s3, s4, s5, s6, s7, s8, s9};
                            DefaultTableModel model1 = (DefaultTableModel) t1.getModel();
                            model1.setRowCount(0);
                            model1.addRow(obj);
                        
                                }  
                        if (s0 == null){
                            
                            JOptionPane.showMessageDialog(this, "no record saved as "+ss2+","
                                    + "\nin the "+ss1+" category.");
                    
                    }
                        } catch (SQLException ex) {
                            Logger.getLogger(salaries.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        break;
                    }
                }
        }else{
                JOptionPane.showMessageDialog(this, "empty search box.");
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(salaries.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(salaries.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(salaries.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(salaries.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new salaries().setVisible(true);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(salaries.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(salaries.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton confirm;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel nmt;
    public static javax.swing.JTable t1;
    private javax.swing.JTextField tos;
    private javax.swing.JTextField tt1;
    private javax.swing.JTextField tt2;
    private javax.swing.JTextField tt3;
    private javax.swing.JTextField tt4;
    private javax.swing.JTextField tt5;
    private javax.swing.JTextField tt6;
    private javax.swing.JTextField tt7;
    private javax.swing.JTextField tt8;
    private javax.swing.JTextField tt9;
    private javax.swing.JTextField wts;
    // End of variables declaration//GEN-END:variables

    private static void locate() throws ClassNotFoundException, SQLException {
   Class.forName("org.sqlite.JDBC");
   DefaultTableModel model = (DefaultTableModel) t1.getModel();
   model.setRowCount(0);
        Connection con = DriverManager.getConnection("jdbc:sqlite:lng.db");
        Statement state11 = con.createStatement();
        ResultSet rs = state11.executeQuery("select * from sls;");
         while(rs.next()){
             
                        String s0=rs.getString(1);
                        String s1=rs.getString(2);
                        String s2=rs.getString(3);
                        String s3=rs.getString(4);
                        String s4=rs.getString(5);
                        String s5=rs.getString(6);
                        String s6=rs.getString(7);
                        String s7=rs.getString(8);
                        String s8=rs.getString(9);
                        String s9=rs.getString(10);
                        
                        Object[] obj = {s0, s1, s2, s3, s4, s5, s6, s7, s8, s9};
                        DefaultTableModel model1 = (DefaultTableModel) t1.getModel();
                        model1.addRow(obj);
                        
                        
         }
         con.close();
         rs.close();
         state11.close();
    }
    
}
